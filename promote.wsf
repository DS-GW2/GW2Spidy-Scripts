<job id="SpidyExample">
	<Script language="JScript" src="json2.js" />
        <Script language="JScript" src="gw2spidy.js" />
        <Script language="JScript" src="craftmats.js" />
	<script language="JScript">
                var spidy = new GW2Spidy();

		var COMMON_PROMOTION = 0;
		var FINE_PROMOTION = 1;
		var DUST_PROMOTION = 2;
		var RARE_PROMOTION = 3;

		var promotionType = COMMON_PROMOTION;
		var index, startId, promotedId;
                var objArgs = WScript.Arguments;
		if (objArgs.length != 2)
                {
			Usage();
                }
		else
		{
			index = parseInt(objArgs(1)) - 1;
			if (index < 0 || index > 4) Usage();
		}

		var type = objArgs(0);
		switch (type.toLowerCase())
		{
			case "cloth":
				startId = commonCloth[index].item_id;
				promotedId = commonCloth[index+1].item_id;
				break;
			case "bolt":
				startId = commonBolt[index].item_id;
				promotedId = commonBolt[index+1].item_id;
				break;
			case "ore":
				if (index == 2)
				{
					index = 3;	
				}
				startId = commonOre[index].item_id;
				promotedId = commonOre[index+1].item_id;

				/*if (index == 2)
				{
					startId = 19699; // Iron Ore
					// we still use platinum as promotedId even though 1 gold ore 
					// can be used as the promoted item in the formula
					// ASSUMPTION: price of 1 gold ore and 1 platinum ore are close enough for this difference
					//  to be negligible.
				}
				else
				{
					startId = commonOre[index].item_id;
				}
				if (index == 0) // Copper can only be promoted to Iron
				{
					promotedId = 19699; // Iron Ore
				}
				else
				{
					promotedId = commonOre[index+1].item_id;
				}*/
				break;
			case "jewel":
				if (index == 0)
				{
					index = 1;	
				}
				startId = commonJewel[index].item_id;
				promotedId = commonJewel[index+1].item_id;
				break;
			case "ingot":
				startId = commonIngot[index].item_id;
				promotedId = commonIngot[index+1].item_id;
				if (index == 3) // Darksteel Ingot to Mithril Ingot
				{
					index = 2; // Use Luminous Dust instead
				}
				break;
			case "jewelingot":
				startId = jewelIngot[index].item_id;
				promotedId = jewelIngot[index+1].item_id;
				break;
			case "leather":
				startId = commonLeather[index].item_id;
				promotedId = commonLeather[index+1].item_id;
				break;
			case "square":
				startId = commonSquare[index].item_id;
				promotedId = commonSquare[index+1].item_id;
				break;
			case "log":
				startId = commonLog[index].item_id;
				promotedId = commonLog[index+1].item_id;
				break;
			case "plank":
				startId = commonPlank[index].item_id;
				promotedId = commonPlank[index+1].item_id;
				break;
			case "bone":
				startId = fineBones[index].item_id;
				promotedId = fineBones[index+1].item_id;
				promotionType = FINE_PROMOTION;
				break;
			case "claw":
				startId = fineClaws[index].item_id;
				promotedId = fineClaws[index+1].item_id;
				promotionType = FINE_PROMOTION;
				break;
			case "fang":
				startId = fineFangs[index].item_id;
				promotedId = fineFangs[index+1].item_id;
				promotionType = FINE_PROMOTION;
				break;
			case "scale":
				startId = fineScales[index].item_id;
				promotedId = fineScales[index+1].item_id;
				promotionType = FINE_PROMOTION;
				break;
			case "totem":
				startId = fineTotems[index].item_id;
				promotedId = fineTotems[index+1].item_id;
				promotionType = FINE_PROMOTION;
				break;
			case "venomsac":
				startId = fineVenomSacs[index].item_id;
				promotedId = fineVenomSacs[index+1].item_id;
				promotionType = FINE_PROMOTION;
				break;
			case "blood":
				startId = fineVialsOfBlood[index].item_id;
				promotedId = fineVialsOfBlood[index+1].item_id;
				promotionType = FINE_PROMOTION;
				break;
			case "dust":
				startId = fineDust[index].item_id;
				promotedId = fineDust[index+1].item_id;
				promotionType = DUST_PROMOTION;
				break;
			case "essence":
				if (index > 3) Usage();
				startId = rareEssence[index].item_id;
				promotedId = rareEssence[index+1].item_id;
				promotionType = RARE_PROMOTION;
				break;
			case "onyx":
				if (index > 3) Usage();
				startId = rareOnyx[index].item_id;
				promotedId = rareOnyx[index+1].item_id;
				promotionType = RARE_PROMOTION;
				break;
			case "molten":
				if (index > 3) Usage();
				startId = rareMolten[index].item_id;
				promotedId = rareMolten[index+1].item_id;
				promotionType = RARE_PROMOTION;
				break;
			case "glacial":
				if (index > 3) Usage();
				startId = rareGlacial[index].item_id;
				promotedId = rareGlacial[index+1].item_id;
				promotionType = RARE_PROMOTION;
				break;
			case "destroyer":
				if (index > 3) Usage();
				startId = rareDestroyer[index].item_id;
				promotedId = rareDestroyer[index+1].item_id;
				promotionType = RARE_PROMOTION;
				break;
			case "crystal":
				if (index > 3) Usage();
				startId = rareCrystal[index].item_id;
				promotedId = rareCrystal[index+1].item_id;
				promotionType = RARE_PROMOTION;
				break;
			case "corrupted":
				if (index > 3) Usage();
				startId = rareCorrupted[index].item_id;
				promotedId = rareCorrupted[index+1].item_id;
				promotionType = RARE_PROMOTION;
				break;
			case "charged":
				if (index > 3) Usage();
				startId = rareCharged[index].item_id;
				promotedId = rareCharged[index+1].item_id;
				promotionType = RARE_PROMOTION;
				break;
			default:
				Usage();
				break;
		}


		var startItem = spidy.ItemData(startId);
		var promotedItem = spidy.ItemData(promotedId);
		//if (index > 4) index = 4;
		var dustItem = spidy.ItemData(fineDust[index+1].item_id);

		var cost;

		switch (promotionType)
		{
			case COMMON_PROMOTION:
				cost = (parseInt(startItem.max_offer_unit_price) * 250) + parseInt(promotedItem.max_offer_unit_price) + (5 * parseInt(dustItem.max_offer_unit_price));
				WScript.Echo ("Promoting 250 " + startItem.name + " into some " + promotedItem.name);
				break;

			case FINE_PROMOTION:
				cost = (parseInt(startItem.max_offer_unit_price) * 50) + parseInt(promotedItem.max_offer_unit_price) + (5 * parseInt(dustItem.max_offer_unit_price));
				WScript.Echo ("Promoting 50 " + startItem.name + " into some " + promotedItem.name);
				break;

			case DUST_PROMOTION:
				cost = (parseInt(startItem.max_offer_unit_price) * 250) + parseInt(promotedItem.max_offer_unit_price);
				WScript.Echo ("Promoting 250 " + startItem.name + " into some " + promotedItem.name);
				break;

			case RARE_PROMOTION:
				dustItem = spidy.ItemData(fineDust[index+2].item_id);
				// 2560 is the cost of a Bottle of Elonian Wine
				cost = (parseInt(startItem.max_offer_unit_price) * 2) + parseInt(dustItem.max_offer_unit_price) + 2560;
				WScript.Echo ("Promoting 2 " + startItem.name + " into a " + promotedItem.name);

				var promotedItemWorth = parseInt(promotedItem.max_offer_unit_price);
				if (promotedItemWorth > cost)
				{
					WScript.Echo ("Worth Promoting 2 " + startItem.name + " into 1 " + promotedItem.name);
				}
				else
				{
					WScript.Echo ("NOT worth Promoting 2 " + startItem.name + " into 1 " + promotedItem.name);
				}
				WScript.Echo ("Cost of promotion: " + cost + " worth of promoted item: " + promotedItemWorth);
				WScript.Quit();
				break;
		}

		//cost = cost * 0.85;

		var numberToWorth = cost / parseInt(promotedItem.max_offer_unit_price);

		WScript.Echo ("Cost of promotion: " + cost + " Number of promoted items to be generated for promotion to be worth it: " + numberToWorth);				

		function Usage()
		{
			WScript.Echo ("cscript promote.wsf <cloth|ore|leather|log|bone|claw|fang|scale|totem|venomsac|blood|dust|essence|onyx|molten|glacial|destroyer|crystal|corrupted|charged> <1 to 5 tier to promote FROM>");
			WScript.Echo ("Note: Second parameter limited to <1 to 4> for Rare crafting material promotions.");
                        WScript.Quit();
		}

	</script>
</job>
